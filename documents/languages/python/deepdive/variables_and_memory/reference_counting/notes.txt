When you create a variable "my_var" and assign a value 10 to it and then create a new variable called "other_var" and assign the firstly instantiated "my_var" to be its value, you are actually making the variable "other_var" a pointer to the value 10 and therefore increasing the reference count to that memory address(the memory address storing the value 10) by 1. You can see the reference count of a memory address by using a "sys" method called "sys.getrefcount(*variable*)", beware that passing the variable to that function increases the reference count to the desired memory address by 1, simply because you are referencing it again using the variable as a pointer. To get the reference count to a certain memory address without using a variable as a reference and therefore increasing the value count, you can use a function inside the C library(we are getting low level in this shit bro) called "ctypes.c_long.from_address(*memory address*).value", and since you are using the memory address itself and not a variable to find it in the computer's memory, you won't increase the reference count to that address!

