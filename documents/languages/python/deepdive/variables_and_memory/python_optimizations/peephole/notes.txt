There are other optimizations beyond interning and string interning, those are called peephole optimizations. Just like the other, they occur at compilation time and include the pre-calculation and storing(some kind of caching, I suppose) of constant expressions, like operations of numbers that are composed of variables or anything that can change during the program's execution, and the  storing operations with string that don't exceed the length of 20 because of the not advantageous tradeoff between memory overhead and computation. When membership tests(expressions that use the "in" operator) contant lists and sets are respectively changed into tuples and frozensets because tuples are faster than lists and frozensets are basically dictionaries and therefore support dictionary lookup, a vary fast computational process. 

